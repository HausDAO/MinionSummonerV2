/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface EscrowMinionInterface extends ethers.utils.Interface {
  functions: {
    "actions(address,uint256)": FunctionFragment;
    "cancelAction(uint256,address)": FunctionFragment;
    "escrowBalances(address,uint256,address)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)": FunctionFragment;
    "withdrawToDestination(uint256,address,address[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "actions",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelAction",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "escrowBalances",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [string, string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "proposeTribute",
    values: [
      string,
      string[],
      [BigNumberish, BigNumberish, BigNumberish][],
      string,
      [BigNumberish, BigNumberish, BigNumberish],
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawToDestination",
    values: [BigNumberish, string, string[]]
  ): string;

  decodeFunctionResult(functionFragment: "actions", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "cancelAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "escrowBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposeTribute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawToDestination",
    data: BytesLike
  ): Result;

  events: {
    "ActionCanceled(uint256,address)": EventFragment;
    "ExecuteAction(uint256,address,address)": EventFragment;
    "ProposeAction(uint256,address,address,address[],uint256[10],uint256[10],uint256[10],address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ActionCanceled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExecuteAction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposeAction"): EventFragment;
}

export class EscrowMinion extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: EscrowMinionInterface;

  functions: {
    actions(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultAddress: string;
      proposer: string;
      0: string;
      1: string;
    }>;

    "actions(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultAddress: string;
      proposer: string;
      0: string;
      1: string;
    }>;

    cancelAction(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelAction(uint256,address)"(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    escrowBalances(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<{
      executed: boolean;
      0: boolean;
    }>;

    "escrowBalances(address,uint256,address)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<{
      executed: boolean;
      0: boolean;
    }>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    proposeTribute(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)"(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    withdrawToDestination(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawToDestination(uint256,address,address[])"(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  actions(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultAddress: string;
    proposer: string;
    0: string;
    1: string;
  }>;

  "actions(address,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<{
    vaultAddress: string;
    proposer: string;
    0: string;
    1: string;
  }>;

  cancelAction(
    _proposalId: BigNumberish,
    molochAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelAction(uint256,address)"(
    _proposalId: BigNumberish,
    molochAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  escrowBalances(
    arg0: string,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "escrowBalances(address,uint256,address)"(
    arg0: string,
    arg1: BigNumberish,
    arg2: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  onERC1155Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  onERC721Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "onERC721Received(address,address,uint256,bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  proposeTribute(
    molochAddress: string,
    tokenAddresses: string[],
    typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
    vaultAddress: string,
    requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
    details: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)"(
    molochAddress: string,
    tokenAddresses: string[],
    typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
    vaultAddress: string,
    requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
    details: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  withdrawToDestination(
    proposalId: BigNumberish,
    molochAddress: string,
    tokenAddresses: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawToDestination(uint256,address,address[])"(
    proposalId: BigNumberish,
    molochAddress: string,
    tokenAddresses: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    actions(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultAddress: string;
      proposer: string;
      0: string;
      1: string;
    }>;

    "actions(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      vaultAddress: string;
      proposer: string;
      0: string;
      1: string;
    }>;

    cancelAction(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelAction(uint256,address)"(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    escrowBalances(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "escrowBalances(address,uint256,address)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    proposeTribute(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)"(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawToDestination(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawToDestination(uint256,address,address[])"(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    ActionCanceled(proposalId: null, moloch: null): EventFilter;

    ExecuteAction(proposalId: null, executor: null, moloch: null): EventFilter;

    ProposeAction(
      proposalId: null,
      proposer: null,
      moloch: null,
      tokens: null,
      types: null,
      tokenIds: null,
      amounts: null,
      destinationVault: null
    ): EventFilter;
  };

  estimateGas: {
    actions(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "actions(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    cancelAction(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "cancelAction(uint256,address)"(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    escrowBalances(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "escrowBalances(address,uint256,address)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    proposeTribute(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)"(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    withdrawToDestination(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawToDestination(uint256,address,address[])"(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    actions(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "actions(address,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cancelAction(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelAction(uint256,address)"(
      _proposalId: BigNumberish,
      molochAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    escrowBalances(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "escrowBalances(address,uint256,address)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onERC721Received(address,address,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposeTribute(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "proposeTribute(address,address[],uint256[3][],address,uint256[3],string)"(
      molochAddress: string,
      tokenAddresses: string[],
      typesTokenIdsAmounts: [BigNumberish, BigNumberish, BigNumberish][],
      vaultAddress: string,
      requestSharesLootFunds: [BigNumberish, BigNumberish, BigNumberish],
      details: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    withdrawToDestination(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawToDestination(uint256,address,address[])"(
      proposalId: BigNumberish,
      molochAddress: string,
      tokenAddresses: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
