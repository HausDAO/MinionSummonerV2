/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OwnerManager } from "./OwnerManager";

export class OwnerManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OwnerManager> {
    return super.deploy(overrides || {}) as Promise<OwnerManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnerManager {
    return super.attach(address) as OwnerManager;
  }
  connect(signer: Signer): OwnerManagerFactory {
    return super.connect(signer) as OwnerManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerManager {
    return new Contract(address, _abi, signerOrProvider) as OwnerManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "ChangedThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a5e806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e67e2b1161005b578063a0e67e2b146100d3578063e318b52b146100e8578063e75235b8146100fb578063f8dc5dd9146101105761007d565b80630d582f13146100825780632f54bf6e14610097578063694e80c3146100c0575b600080fd5b610095610090366004610859565b610123565b005b6100aa6100a53660046107bb565b61027f565b6040516100b791906108fb565b60405180910390f35b6100956100ce366004610882565b6102bc565b6100db610347565b6040516100b791906108ae565b6100956100f63660046107dc565b610453565b610103610628565b6040516100b791906109c0565b61009561011e36600461081e565b61062e565b61012b610783565b6001600160a01b0382161580159061014d57506001600160a01b038216600114155b801561016257506001600160a01b0382163014155b6101875760405162461bcd60e51b815260040161017e90610925565b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101bf5760405162461bcd60e51b815260040161017e90610982565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03858116808552604085208054929093166001600160a01b0319928316179092556001808552835490911690911790915580549161022d836109f7565b91905055507f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2682604051610261919061089a565b60405180910390a1806002541461027b5761027b816102bc565b5050565b60006001600160a01b0382166001148015906102b457506001600160a01b038281166000908152602081905260409020541615155b90505b919050565b6102c4610783565b6001548111156102e65760405162461bcd60e51b815260040161017e90610906565b60018110156103075760405162461bcd60e51b815260040161017e90610944565b60028190556040517f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939061033c9083906109c0565b60405180910390a150565b6060600060015467ffffffffffffffff81111561037457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561039d578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b03811660011461044b578083838151811061040c57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039283166020918202929092018101919091529181166000908152918290526040909120541681610443816109f7565b9250506103da565b509091505090565b61045b610783565b6001600160a01b0381161580159061047d57506001600160a01b038116600114155b801561049257506001600160a01b0381163014155b6104ae5760405162461bcd60e51b815260040161017e90610925565b6001600160a01b0381811660009081526020819052604090205416156104e65760405162461bcd60e51b815260040161017e90610982565b6001600160a01b0382161580159061050857506001600160a01b038216600114155b6105245760405162461bcd60e51b815260040161017e90610925565b6001600160a01b038381166000908152602081905260409020548116908316146105605760405162461bcd60e51b815260040161017e906109a1565b6001600160a01b03828116600081815260208190526040808220805486861680855283852080549288166001600160a01b03199384161790559589168452828420805482169096179095559290915281549092169055517ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf906105e490849061089a565b60405180910390a17f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea268160405161061b919061089a565b60405180910390a1505050565b60025490565b610636610783565b806001805461064591906109c9565b10156106635760405162461bcd60e51b815260040161017e90610906565b6001600160a01b0382161580159061068557506001600160a01b038216600114155b6106a15760405162461bcd60e51b815260040161017e90610925565b6001600160a01b038381166000908152602081905260409020548116908316146106dd5760405162461bcd60e51b815260040161017e906109a1565b6001600160a01b03828116600081815260208190526040808220805488861684529183208054929095166001600160a01b03199283161790945591815282549091169091556001805491610730836109e0565b91905055507ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf82604051610764919061089a565b60405180910390a1806002541461077e5761077e816102bc565b505050565b3330146107a25760405162461bcd60e51b815260040161017e90610963565b565b80356001600160a01b03811681146102b757600080fd5b6000602082840312156107cc578081fd5b6107d5826107a4565b9392505050565b6000806000606084860312156107f0578182fd5b6107f9846107a4565b9250610807602085016107a4565b9150610815604085016107a4565b90509250925092565b600080600060608486031215610832578283fd5b61083b846107a4565b9250610849602085016107a4565b9150604084013590509250925092565b6000806040838503121561086b578182fd5b610874836107a4565b946020939093013593505050565b600060208284031215610893578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156108ef5783516001600160a01b0316835292840192918401916001016108ca565b50909695505050505050565b901515815260200190565b602080825260059082015264475332303160d81b604082015260600190565b602080825260059082015264475332303360d81b604082015260600190565b60208082526005908201526423a999181960d91b604082015260600190565b602080825260059082015264475330333160d81b604082015260600190565b60208082526005908201526411d4cc8c0d60da1b604082015260600190565b602080825260059082015264475332303560d81b604082015260600190565b90815260200190565b6000828210156109db576109db610a12565b500390565b6000816109ef576109ef610a12565b506000190190565b6000600019821415610a0b57610a0b610a12565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206b40a7e6eaa9f7943b5413fa9f58848cb89f4f1df2fff6e5f15d098ac129798a64736f6c63430008000033";
