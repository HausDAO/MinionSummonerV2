/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TestExecutorInterface extends ethers.utils.Interface {
  functions: {
    "exec(address,uint256,bytes)": FunctionFragment;
    "execTransactionFromModule(address,uint256,bytes,uint8)": FunctionFragment;
    "module()": FunctionFragment;
    "setModule(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "exec",
    values: [string, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "execTransactionFromModule",
    values: [string, BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "module", values?: undefined): string;
  encodeFunctionData(functionFragment: "setModule", values: [string]): string;

  decodeFunctionResult(functionFragment: "exec", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "execTransactionFromModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "module", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setModule", data: BytesLike): Result;

  events: {};
}

export class TestExecutor extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TestExecutorInterface;

  functions: {
    exec(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "exec(address,uint256,bytes)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    execTransactionFromModule(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "execTransactionFromModule(address,uint256,bytes,uint8)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    module(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "module()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    setModule(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  exec(
    to: string,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "exec(address,uint256,bytes)"(
    to: string,
    value: BigNumberish,
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  execTransactionFromModule(
    to: string,
    value: BigNumberish,
    data: BytesLike,
    operation: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "execTransactionFromModule(address,uint256,bytes,uint8)"(
    to: string,
    value: BigNumberish,
    data: BytesLike,
    operation: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  module(overrides?: CallOverrides): Promise<string>;

  "module()"(overrides?: CallOverrides): Promise<string>;

  setModule(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setModule(address)"(
    _module: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    exec(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "exec(address,uint256,bytes)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    execTransactionFromModule(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "execTransactionFromModule(address,uint256,bytes,uint8)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    module(overrides?: CallOverrides): Promise<string>;

    "module()"(overrides?: CallOverrides): Promise<string>;

    setModule(_module: string, overrides?: CallOverrides): Promise<void>;

    "setModule(address)"(
      _module: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    exec(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "exec(address,uint256,bytes)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    execTransactionFromModule(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "execTransactionFromModule(address,uint256,bytes,uint8)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    module(overrides?: CallOverrides): Promise<BigNumber>;

    "module()"(overrides?: CallOverrides): Promise<BigNumber>;

    setModule(_module: string, overrides?: Overrides): Promise<BigNumber>;

    "setModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    exec(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "exec(address,uint256,bytes)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    execTransactionFromModule(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "execTransactionFromModule(address,uint256,bytes,uint8)"(
      to: string,
      value: BigNumberish,
      data: BytesLike,
      operation: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    module(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "module()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setModule(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setModule(address)"(
      _module: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
