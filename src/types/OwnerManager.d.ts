/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface OwnerManagerInterface extends ethers.utils.Interface {
  functions: {
    "addOwnerWithThreshold(address,uint256)": FunctionFragment;
    "changeThreshold(uint256)": FunctionFragment;
    "getOwners()": FunctionFragment;
    "getThreshold()": FunctionFragment;
    "isOwner(address)": FunctionFragment;
    "removeOwner(address,address,uint256)": FunctionFragment;
    "swapOwner(address,address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addOwnerWithThreshold",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getOwners", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isOwner", values: [string]): string;
  encodeFunctionData(
    functionFragment: "removeOwner",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "swapOwner",
    values: [string, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addOwnerWithThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getOwners", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "swapOwner", data: BytesLike): Result;

  events: {
    "AddedOwner(address)": EventFragment;
    "ChangedThreshold(uint256)": EventFragment;
    "RemovedOwner(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddedOwner"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ChangedThreshold"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedOwner"): EventFragment;
}

export class OwnerManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: OwnerManagerInterface;

  functions: {
    addOwnerWithThreshold(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addOwnerWithThreshold(address,uint256)"(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    changeThreshold(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeThreshold(uint256)"(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getOwners(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "getOwners()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    getThreshold(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "getThreshold()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    isOwner(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    removeOwner(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeOwner(address,address,uint256)"(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    swapOwner(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "swapOwner(address,address,address)"(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  addOwnerWithThreshold(
    owner: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addOwnerWithThreshold(address,uint256)"(
    owner: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  changeThreshold(
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeThreshold(uint256)"(
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getOwners(overrides?: CallOverrides): Promise<string[]>;

  "getOwners()"(overrides?: CallOverrides): Promise<string[]>;

  getThreshold(overrides?: CallOverrides): Promise<BigNumber>;

  "getThreshold()"(overrides?: CallOverrides): Promise<BigNumber>;

  isOwner(owner: string, overrides?: CallOverrides): Promise<boolean>;

  "isOwner(address)"(
    owner: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  removeOwner(
    prevOwner: string,
    owner: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeOwner(address,address,uint256)"(
    prevOwner: string,
    owner: string,
    _threshold: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  swapOwner(
    prevOwner: string,
    oldOwner: string,
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "swapOwner(address,address,address)"(
    prevOwner: string,
    oldOwner: string,
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    addOwnerWithThreshold(
      owner: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addOwnerWithThreshold(address,uint256)"(
      owner: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeThreshold(
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeThreshold(uint256)"(
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getOwners(overrides?: CallOverrides): Promise<string[]>;

    "getOwners()"(overrides?: CallOverrides): Promise<string[]>;

    getThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    "getThreshold()"(overrides?: CallOverrides): Promise<BigNumber>;

    isOwner(owner: string, overrides?: CallOverrides): Promise<boolean>;

    "isOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    removeOwner(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeOwner(address,address,uint256)"(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    swapOwner(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "swapOwner(address,address,address)"(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    AddedOwner(owner: null): EventFilter;

    ChangedThreshold(threshold: null): EventFilter;

    RemovedOwner(owner: null): EventFilter;
  };

  estimateGas: {
    addOwnerWithThreshold(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addOwnerWithThreshold(address,uint256)"(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    changeThreshold(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeThreshold(uint256)"(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getOwners(overrides?: CallOverrides): Promise<BigNumber>;

    "getOwners()"(overrides?: CallOverrides): Promise<BigNumber>;

    getThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    "getThreshold()"(overrides?: CallOverrides): Promise<BigNumber>;

    isOwner(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeOwner(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeOwner(address,address,uint256)"(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    swapOwner(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "swapOwner(address,address,address)"(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addOwnerWithThreshold(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addOwnerWithThreshold(address,uint256)"(
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    changeThreshold(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeThreshold(uint256)"(
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getOwners(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getOwners()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getThreshold(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getThreshold()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isOwner(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isOwner(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeOwner(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeOwner(address,address,uint256)"(
      prevOwner: string,
      owner: string,
      _threshold: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    swapOwner(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "swapOwner(address,address,address)"(
      prevOwner: string,
      oldOwner: string,
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
