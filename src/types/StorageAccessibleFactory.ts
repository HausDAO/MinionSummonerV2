/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StorageAccessible } from "./StorageAccessible";

export class StorageAccessibleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StorageAccessible> {
    return super.deploy(overrides || {}) as Promise<StorageAccessible>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StorageAccessible {
    return super.attach(address) as StorageAccessible;
  }
  connect(signer: Signer): StorageAccessibleFactory {
    return super.connect(signer) as StorageAccessibleFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StorageAccessible {
    return new Contract(address, _abi, signerOrProvider) as StorageAccessible;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getStorageAt",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "calldataPayload",
        type: "bytes",
      },
    ],
    name: "simulateAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610301806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635624b25b1461003b578063b4faba0914610064575b600080fd5b61004e6100493660046101f1565b610079565b60405161005b9190610212565b60405180910390f35b610077610072366004610130565b61010d565b005b60606000610088836020610265565b67ffffffffffffffff8111156100ae57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156100d8576020820181803683370190505b50905060005b838110156101055784810154602080830284010152806100fd81610284565b9150506100de565b509392505050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b60008060408385031215610142578182fd5b82356001600160a01b0381168114610158578283fd5b915060208381013567ffffffffffffffff80821115610175578384fd5b818601915086601f830112610188578384fd5b81358181111561019a5761019a6102b5565b604051601f8201601f19168101850183811182821017156101bd576101bd6102b5565b60405281815283820185018910156101d3578586fd5b81858501868301378585838301015280955050505050509250929050565b60008060408385031215610203578182fd5b50508035926020909101359150565b6000602080835283518082850152825b8181101561023e57858101830151858201604001528201610222565b8181111561024f5783604083870101525b50601f01601f1916929092016040019392505050565b600081600019048311821515161561027f5761027f61029f565b500290565b60006000198214156102985761029861029f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208866c2697c5ae3999cc750e67da0c51a99340f9c695191d4ac82297543cf835364736f6c63430008000033";
