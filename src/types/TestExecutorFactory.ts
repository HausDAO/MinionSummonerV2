/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestExecutor } from "./TestExecutor";

export class TestExecutorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestExecutor> {
    return super.deploy(overrides || {}) as Promise<TestExecutor>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestExecutor {
    return super.attach(address) as TestExecutor;
  }
  connect(signer: Signer): TestExecutorFactory {
    return super.connect(signer) as TestExecutorFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExecutor {
    return new Contract(address, _abi, signerOrProvider) as TestExecutor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "module",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address",
      },
    ],
    name: "setModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061057f806100206000396000f3fe6080604052600436106100435760003560e01c80630565bb671461004f578063468721a71461007157806347f543bc146100a7578063b86d5298146100c75761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061006f61006a3660046103ae565b6100e9565b005b34801561007d57600080fd5b5061009161008c366004610408565b610165565b60405161009e91906104a3565b60405180910390f35b3480156100b357600080fd5b5061006f6100c236600461038b565b6102a9565b3480156100d357600080fd5b506100dc6102cb565b60405161009e919061048f565b60006060856001600160a01b031685858560405161010892919061047f565b60006040518083038185875af1925050503d8060008114610145576040519150601f19603f3d011682016040523d82523d6000602084013e61014a565b606091505b5090925090508161015d57805160208201fd5b505050505050565b60006101996040518060400160405280600d81526020016c4445425547204554464d20257360981b8152508360ff166102da565b6000546001600160a01b031633146101cc5760405162461bcd60e51b81526004016101c390610509565b60405180910390fd5b8160ff166001141561023d57856001600160a01b031684846040516101f292919061047f565b600060405180830381855af49150503d806000811461022d576040519150601f19603f3d011682016040523d82523d6000602084013e610232565b606091505b5050809150506102a0565b856001600160a01b031685858560405161025892919061047f565b60006040518083038185875af1925050503d8060008114610295576040519150601f19603f3d011682016040523d82523d6000602084013e61029a565b606091505b50909150505b95945050505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031681565b61031f82826040516024016102f09291906104ae565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610323565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008083601f840112610355578182fd5b50813567ffffffffffffffff81111561036c578182fd5b60208301915083602082850101111561038457600080fd5b9250929050565b60006020828403121561039c578081fd5b81356103a781610531565b9392505050565b600080600080606085870312156103c3578283fd5b84356103ce81610531565b935060208501359250604085013567ffffffffffffffff8111156103f0578283fd5b6103fc87828801610344565b95989497509550505050565b60008060008060006080868803121561041f578081fd5b853561042a81610531565b945060208601359350604086013567ffffffffffffffff81111561044c578182fd5b61045888828901610344565b909450925050606086013560ff81168114610471578182fd5b809150509295509295909350565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000604082528351806040840152815b818110156104db57602081870181015160608684010152016104be565b818111156104ec5782606083860101525b50602083019390935250601f91909101601f191601606001919050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b6001600160a01b038116811461054657600080fd5b5056fea26469706673582212201c39fa2ea23783af1d514535f73412c1523e47d7df3f6324f97ca22ce5aafe8864736f6c63430008000033";
